#!/usr/bin/env sh

display_help() {
	cat <<-EOF
	Usage: $(basename "$0") [OPTIONS] COMMAND [ARGS...]

	Commands:
	  read		Print a note to STDOUT.
	  write		Create or edit a note.
	  list		List all the notes.
	  path		Print the path to the note.
	  move		Rename a note.
	  remove	Delete a note.

	Options:
	  -h|--help	Display the help.
	EOF
}

clean_directory() {
	find . -depth -type d -exec rmdir {} \; 2> /dev/null
}

if [ -z "$CALEPIN_PATH" ]; then
	CALEPIN_PATH="$HOME/.calepin"
else
	CALEPIN_PATH=${CALEPIN_PATH%/}
fi

if [ -z "$CALEPIN_EXT" ]; then
	CALEPIN_EXT="txt"
fi

if ! [ -d "$CALEPIN_PATH" ]; then
	mkdir -p "$CALEPIN_PATH"
	echo "Create <$CALEPIN_PATH>."
fi

cd "$CALEPIN_PATH" || exit

case $1 in
	read)
		[ -f "./$2.$CALEPIN_EXT" ] && cat "./$2.$CALEPIN_EXT";;
	write)
		mkdir -p "$(dirname "./$2")"
		! [ -z "$2" ] && "$EDITOR" "./$2.$CALEPIN_EXT" && clean_directory;;
	list)
		find . -type f -name "*.$CALEPIN_EXT" | rev | cut -f 2- -d '.' | rev;;
	path)
		[ -f "./$2.$CALEPIN_EXT" ] && echo "$CALEPIN_PATH/$2.$CALEPIN_EXT";;
	move)
		if [ -f "./$2.$CALEPIN_EXT" ] && ! [ -f "./$3.$CALEPIN_EXT" ]; then
			mkdir -p "$(dirname "./$3.$CALEPIN_EXT")"
			mv "./$2.$CALEPIN_EXT" "./$3.$CALEPIN_EXT" && clean_directory
		fi;;
	remove)
		[ -e "./$2.$CALEPIN_EXT" ] && rm -rf "./$2.$CALEPIN_EXT" && clean_directory;;
	-h|--help)
		display_help;;
	*)
		display_help
		exit 1;;
esac
